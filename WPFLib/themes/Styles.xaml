<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFLib"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PresentationFramework.Aero;V3.0.0.0;31bf3856ad364e35;component\themes/aero.normalcolor.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <local:ValidationErrorsMultiConverter x:Key="ValidationErrorsMultiConverter"/>
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Content" Value="Ttttt"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" Background="#00000000" Padding="1">
                        <Path x:Name="Path" Stretch="Fill" StrokeThickness="0.5" 
								Fill="Black" 
								Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z " 
								HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="8" Width="8"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FFEE3030"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="DefaultWaterMarkBrush" Color="{DynamicResource {x:Static SystemColors.InactiveCaptionColorKey}}"/>
    <Style x:Key="WaterMarkTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Opacity" Value="0.79"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultWaterMarkBrush}">
        </Setter>
    </Style>
    <Style x:Key="WaterMarkTextBox" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}">
                        <Grid>
                            <TextBlock Style="{StaticResource WaterMarkTextBlock}" x:Name="tbWaterMark" HorizontalAlignment="Left" Text="{TemplateBinding Tag}" TextWrapping="Wrap" Margin="3,1,1,1" Visibility="Collapsed">
                            </TextBlock>
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </Microsoft_Windows_Themes:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused"
									Value="False" />
                                <Condition Property="Text"
									Value="" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
								TargetName="tbWaterMark"
								Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxBindingValidation" TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ValidationErrorsMultiConverter}">
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)"/>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors).Count"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.InitialShowDelay" Value="1"/>
                <Setter Property="ToolTipService.BetweenShowDelay" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxBindingValidation" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ValidationErrorsMultiConverter}">
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)"/>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors).Count"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.InitialShowDelay" Value="1"/>
                <Setter Property="ToolTipService.BetweenShowDelay" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboBoxBindingValidation" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ValidationErrorsMultiConverter}">
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)"/>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors).Count"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.InitialShowDelay" Value="1"/>
                <Setter Property="ToolTipService.BetweenShowDelay" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>