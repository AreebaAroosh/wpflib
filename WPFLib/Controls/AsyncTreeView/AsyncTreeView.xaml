<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:WPFLib="clr-namespace:WPFLib"
                    xmlns:Controls="clr-namespace:WPFLib.Controls" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:WPFLib_Behaviors="clr-namespace:WPFLib.Behaviors" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PresentationFramework.Aero;V3.0.0.0;31bf3856ad364e35;component\themes/aero.normalcolor.xaml" />
        <ResourceDictionary Source="/WPFLib;component/themes/Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
	<ControlTemplate x:Key="AsyncTreeViewTemplate" TargetType="{x:Type TreeView}">
		<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="SearchStates">
					<VisualState x:Name="SearchEnabled">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_SearchTextBox">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_ClearSearchButton">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_SearchIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchGrid">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SearchActive">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_SearchTextBox">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="_tv_scrollviewer_">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_ClearSearchButton">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_SearchIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchGrid">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SearchDisabled">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_SearchTextBox">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_ClearSearchButton">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_SearchIcon">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchGrid">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SearchListBoxStates">
					<VisualState x:Name="SearchInProgress">
						<Storyboard>
							<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(WPFLib:WaitIndicator.Visible)" Storyboard.TargetName="PART_SearchListBox">
								<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
							</BooleanAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SearchInactive"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SearchListBoxTooManyResults">
					<VisualState x:Name="SearchTooManyResults">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SearchNormalResults"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<i:Interaction.Triggers>
				<ei:DataTrigger Binding="{Binding IsSearching, ElementName=PART_SearchListBox}" Value="True">
					<WPFLib_Behaviors:GoToStateActionFixed StateName="SearchInProgress"/>
				</ei:DataTrigger>
				<ei:DataTrigger Binding="{Binding IsSearching, ElementName=PART_SearchListBox}" Value="False">
					<WPFLib_Behaviors:GoToStateActionFixed StateName="SearchInactive"/>
				</ei:DataTrigger>
				<ei:DataTrigger Binding="{Binding IsTooManyResults, ElementName=PART_SearchListBox}" Value="False">
					<WPFLib_Behaviors:GoToStateActionFixed StateName="SearchNormalResults"/>
				</ei:DataTrigger>
				<ei:DataTrigger Binding="{Binding IsTooManyResults, ElementName=PART_SearchListBox}" Value="True">
					<WPFLib_Behaviors:GoToStateActionFixed StateName="SearchTooManyResults"/>
				</ei:DataTrigger>
			</i:Interaction.Triggers>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition MinHeight="100" Height="*"/>
				</Grid.RowDefinitions>
				<Grid>
					<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
                    <Image x:Name="PART_SearchIcon" Source="/WPFLib;component/Resources/search.ico" Width="16" Height="16" Grid.Column="0"/>
                    <TextBox x:Name="PART_SearchTextBox" Style="{StaticResource WaterMarkTextBox}" Tag="Поиск" Height="Auto" Margin="2" TextWrapping="Wrap" Grid.Column="1" Grid.ColumnSpan="1"/>
					<Button x:Name="PART_ClearSearchButton" HorizontalAlignment="Center" Width="Auto" VerticalAlignment="Center" Grid.Column="2" Style="{StaticResource CloseButtonStyle}" Margin="2"/>
				</Grid>
				<Grid x:Name="SearchGrid" Grid.Row="1" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<WPFLib:AsyncSearchListBox x:Name="PART_SearchListBox" HorizontalAlignment="Stretch" Height="Auto" Grid.Row="1" VerticalAlignment="Stretch" Width="Auto" />
					<TextBlock x:Name="textBlock" FontSize="10.667" Foreground="#FFD45151" Visibility="Collapsed" TextWrapping="Wrap">Найдено более <Run Text="{Binding Path=MaxSearchResults,Mode=OneWay,ElementName=PART_SearchListBox}"/> результатов, уточните условие поиска</TextBlock>
				</Grid>
				<ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="False" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Grid.RowSpan="1" Grid.Row="1">
					<ItemsPresenter/>
				</ScrollViewer>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</Trigger>
			<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
				<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="True"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Width" Value="16"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
						<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
							<Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style TargetType="{x:Type WPFLib:AsyncTreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">        
		<Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type WPFLib:AsyncTreeViewItem}">
					<Grid >
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ExpansionStates">
								<VisualState x:Name="Expanded"/>
								<VisualState x:Name="Collapsed"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HasItemsStates">
								<VisualState x:Name="HasItems"/>
								<VisualState x:Name="NoItems"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="CanExpand" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="Working" Value="true">
							<Setter Property="WPFLib:WaitIndicator.Visible" TargetName="Expander" Value="True"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<Controls:AsyncTreeVirtualizingStackPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style TargetType="{x:Type WPFLib:AsyncTreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<Controls:AsyncTreeVirtualizingStackPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template" Value="{StaticResource AsyncTreeViewTemplate}"/>
	</Style>

</ResourceDictionary>